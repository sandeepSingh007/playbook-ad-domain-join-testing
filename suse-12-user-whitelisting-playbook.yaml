---
- name: Whitelisting Users and Groups with simple_allow_users and simple_allow_groups in sssd.conf (SLES 12)
  hosts: all
  gather_facts: false
  become: true
  vars:
    # Configure the following variables during runtime
    # add_users: ["newuser1", "newuser2"]    # List of members to add (format: username)
    # remove_users: ["olduser1"]             # List of members to be removed (format: username)
    # add_groups: ["newgroup1"]              # List of groups to be added (format: groupname)
    # remove_groups: ["oldgroup1"]           # List of groups to be removed (format: groupname)
    ansible_python_interpreter: /usr/bin/env python

  tasks:
    - name: Verify this is SUSE 12
      raw: cat /etc/os-release | grep "VERSION=\"12"
      register: os_check
      failed_when: os_check.rc != 0
      changed_when: false

    - name: Check if /etc/sssd/sssd.conf exists
      raw: test -f /etc/sssd/sssd.conf && echo "EXISTS" || echo "MISSING"
      register: sssd_conf_check
      changed_when: false

    - name: Fail if /etc/sssd/sssd.conf does not exist
      fail:
        msg: "The file /etc/sssd/sssd.conf does not exist. Cannot proceed."
      when: "'MISSING' in sssd_conf_check.stdout"

    - name: Ensure access_provider is set to simple in sssd.conf
      raw: >
        grep -q "^access_provider = simple" /etc/sssd/sssd.conf || 
        (cp -a /etc/sssd/sssd.conf /etc/sssd/sssd.conf.bak && 
        sed -i 's/^access_provider =.*/access_provider = simple/' /etc/sssd/sssd.conf || 
        echo "access_provider = simple" >> /etc/sssd/sssd.conf)
      register: access_provider_result
      changed_when: access_provider_result.rc != 0

    - name: Get the existing simple_allow_users list
      raw: "awk -F '=' '/^simple_allow_users/ {print $2}' /etc/sssd/sssd.conf"
      register: current_users_raw
      changed_when: false

    - name: Get the existing simple_allow_groups list
      raw: "awk -F '=' '/^simple_allow_groups/ {print $2}' /etc/sssd/sssd.conf"
      register: current_groups_raw
      changed_when: false

    - name: Process existing lists and prepare updated lists
      set_fact:
        # Process users list
        current_users: "{{ current_users_raw.stdout.split(',') | map('trim') | select('match', '.+') | list if current_users_raw.stdout != '' else [] }}"
        # Process groups list
        current_groups: "{{ current_groups_raw.stdout.split(',') | map('trim') | select('match', '.+') | list if current_groups_raw.stdout != '' else [] }}"

    - name: Update user and group lists
      set_fact:
        updated_simple_allow_users: "{{ ((current_users|default([])) + (add_users|default([]))) | difference(remove_users|default([])) | unique | list }}"
        updated_simple_allow_groups: "{{ ((current_groups|default([])) + (add_groups|default([]))) | difference(remove_groups|default([])) | unique | list }}"

    - name: Update simple_allow_users in sssd.conf
      raw: >
        grep -q "^simple_allow_users" /etc/sssd/sssd.conf && 
        sed -i "s/^simple_allow_users.*$/simple_allow_users = {{ updated_simple_allow_users | join(', ') }}/" /etc/sssd/sssd.conf || 
        echo "simple_allow_users = {{ updated_simple_allow_users | join(', ') }}" >> /etc/sssd/sssd.conf
      changed_when: false

    - name: Update simple_allow_groups in sssd.conf
      raw: >
        grep -q "^simple_allow_groups" /etc/sssd/sssd.conf && 
        sed -i "s/^simple_allow_groups.*$/simple_allow_groups = {{ updated_simple_allow_groups | join(', ') }}/" /etc/sssd/sssd.conf || 
        echo "simple_allow_groups = {{ updated_simple_allow_groups | join(', ') }}" >> /etc/sssd/sssd.conf
      changed_when: false

    - name: Restart SSSD service
      raw: systemctl restart sssd || service sssd restart
      changed_when: false
      ignore_errors: yes

    - name: Display whitelisting results
      debug:
        msg: |
          SSSD Configuration Updated for SUSE 12:
          - Users Whitelist: {{ updated_simple_allow_users | join(', ') }}
          - Groups Whitelist: {{ updated_simple_allow_groups | join(', ') }}
          
          SSSD service has been restarted.
          
          Note: Empty lists indicate no users/groups are currently whitelisted,
          which means no users will be able to log in via SSSD authentication.
